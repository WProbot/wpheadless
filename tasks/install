#!/usr/bin/env bash

set -eo pipefail

DOMAIN="localhost"
LETSENCRYPT="false"

for i in "$@"; do
  case $i in
    --domain=*)
      DOMAIN="${i#*=}"
      ;;
    --admin-email=*)
      ADMIN_EMAIL="${i#*=}"
      ;;
    --admin-password=*)
      ADMIN_PASSWORD="${i#*=}"
      ;;
    --letsencrypt=*)
      LETSENCRYPT="${i#*=}"
      ;;
    --docker-env=*)
      DOCKER_ENV="${i#*=}"
      ;;
    --aws-use-ec2-iam-role=*)
      AWS_USE_EC2_IAM_ROLE="${i#*=}"
      ;;
    --aws-access-key-id=*)
      AWS_ACCESS_KEY_ID="${i#*=}"
      ;;
    --aws-secret-access-key=*)
      AWS_SECRET_ACCESS_KEY="${i#*=}"
      ;;
  esac
done

# DOMAIN will be passed to docker containers
export DOMAIN

# Pull all docker images at once
COMPOSE_SERVICES_TYPE=services ./docker-compose pull
COMPOSE_SERVICES_TYPE=tasks ./docker-compose pull

# Create http vhost for served domain
mkdir -p "var/vhosts/${DOMAIN}"

./run-task configure \
  --domain="'$DOMAIN'" \
  --admin-email="'$ADMIN_EMAIL'" \
  --letsencrypt="'$LETSENCRYPT'" \
  --docker-env="'$DOCKER_ENV'"

if [ "$LETSENCRYPT" = "true" ]; then
  ./run-task leissue-standalone || \
    ./run-task openssl-self-signed
else
  ./run-task openssl-self-signed
fi

./run-task openssl-dhparam
./docker-compose up -d

./run-task wp-install \
  --admin-password="'$ADMIN_PASSWORD'" \
  --aws-use-ec2-iam-role="'$AWS_USE_EC2_IAM_ROLE'" \
  --aws-access-key-id="'$AWS_ACCESS_KEY_ID'" \
  --aws-secret-access-key="'$AWS_SECRET_ACCESS_KEY'"
